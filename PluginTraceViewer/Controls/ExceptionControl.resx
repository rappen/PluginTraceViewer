<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAN8SURBVFhHtZdrSBRRFMdH0TTTEtI0KYmoDxFYZFkU9EEI
        pSBNKsO0cnY1H4m9YKl85DdJsugB2YO0KKQwqg9m+aUgsEgRw4QQKzGJsnzr5mtP58zODLMzZ911tT/8
        2Nl77v2fu3tn7j0jzFgiRAgm2Cmkw3G8PitB19SWCUvlXnMsE4QhRZisDT9hWkRoxc9CIQuWyKNnoVRY
        gIYWNBxwSOIew0ipcBAWym4zVDpsRoNujaGnfEdiZFc3ZYJkZFQ2cIpv5jjMzx5lYw6I8Bd/0CHZ3YVM
        sA+xORg44WlzAjR+iwafjAk2roM8U+QsTmSGaJztiG4gS9L1GsAriRPV5WwfBiviZDlECMKgW2selDsI
        Xb3L1AmMjAXACstXtq8BEbqkm9sgEUrYAQyX6/PV5ApPmvawfZ1QKGeVRc+5CEO6TixRxS0wMeVjmACx
        ++ozdgzDoOM+QZsM39EBb/MUNHRsURM+er0V7tTGqt87/0RCYM4QO9YA7aCq3NnhkLyHV9RkhF9cNfjH
        V8PklLfaVlZ3mh3L8FFJTns718GB8JM/oG8k2DABIbYGhq1+ahstz/rzzayHDptwGMJpAruYoIHHjXsd
        khOhSXelSejb33+JkZaL89ERTxPIYwIOxF96YUhCrE67BpEHKtjY0Xs3WC8dx2gCBUxAhbbajl8r2SQx
        OaWwMfsCG+sfXQQRp7pZTw3nXE6gtNbCJiASCy0SXIx48C6F9dQgTcDpEqwtbIXxSV/WnHj5YR3UN0Wx
        MYUdF1+x3hJmyHV6E3qZbfC2fRtrqtA7GAi/B4LYmEL7z1Xgn2U1+MvgTUhlFBPMqLrJGmpZnlwBixMr
        YWyC3xkVSp4XGfwROh3D7HuBCT5pAhCS3wM9QyGsmRaxLBcS8B6w2bzYuMLYxDxYU9CmTU47YYs9OYkO
        B03wfkMqazQb3nzeLi2rJs8ZOTsqHUKxQar76LBx9Ys8Ja68Tkk+iMh/vyIRiikYkD0CpsrbkFlVMaeY
        K29BcF6fMgF8/PTKgUAMUAGpdPo/iNDJFySkI7ABO7hVknnINCWZIioc3SxKZwh5JstZXCgd9s/xP2FF
        vzTZ3U1lwCYc1MWYzQxac6q2PVImBKCBBelnzafH/mpG1fasRQUkPTpURvHJFGyYsAWhN+ZQefQci8oo
        OkToFFVez+0najyi21xcSRD+AWpVyqY7chDVAAAAAElFTkSuQmCC
</value>
  </data>
</root>